"""
question_sub_chain - 
问题最优子链拆解
    将问题进行子问题拆解，每个子问题都是原子问题，对于不同问题逻辑拆解不同
Author: cavit
Date: 2025/2/18
"""

# 现在根据所有问题品类进行拆解
# "动作数据查询": """根据动作查询时间点，深海作业A的动作时刻查询问题，需要要明确动作或者明确设备，例如：xxxx/xx/xx A架第一次开机时间在什么时候？ xxxx/xx/xx 缆绳解除的时间点是什么时候？,动作包括："A架开机", "A架摆出", "征服者起吊", "征服者入水", "征服者出水", "A架关机", "A架摆回",
#       "折臂吊车开机", "折臂吊车关机", "小艇入水", "缆绳解除", "小艇落座", "缆绳挂妥","ON DP","OFF DP" """,
# "设备数据查询": "具体设备在某个时刻或者个时间段内的数值情况，设备包括，推进器，侧推（艏推或者艏侧推），绞车，A架（一号二号门架），折臂吊车，发电机，舵桨 问题中一定会包含具体时间，主要是各种设备各个时刻数据指标状态，指标包括压力，电流电压，频率Hz，功率，相位，燃油。例如：在XXXX年XX月XX日XX时XX分，X号柴油发电机组燃油消耗率是多少？",
# "时长处理问题": "动作相隔时间判断问题，包括各类时长比较计算，例如：xxxx/xx/xx A架开机和关机时间间隔多久？, xxxx/xx/xx A架运行时长多长,xx/xx~xx/xx 平均时长, 包括深海作业A各类时长处理问题",
# "盘点动作": "什么设备执行了什么动作的问题。未知设备和未知动作，有具体日期或者时间时间段 例如：xxxx/xx/xx 什么设备进行了什么动作",
# "能耗问题": "计算各类设备的能耗数值问题, 例如：xxxx/xx/xx A架设备总能耗是多少？几月几日xx过程中xx设备能耗，xx日~xx日设备平均能耗等",
# "油耗问题": "计算发电机的油耗，例如：xxxx/xx/xx 上午 发电机油耗是多少L?",
# "资料查询问题": "查询设备的属性参数，查询设备的属性资料，包括给定设备指标查询数据表字段。例如：柴油发电机组滑油压力的范围是多少？一号柴油发电机组有功功率测量的范围是多少kW到多少kW？ 控制xxxx的字段名称是",
# "特殊条件时长问题": "A架，绞车，折臂吊车都存在待机情况，角度摆动存在持续存在，计算这些特殊情况的时常问题。例如：xxxx/xx/xx A架实际运行时长，xxxx/xx/xx 上午折臂吊车的待机时长是多少？ (注意实际运行时长和运行时长的区别)",
# "理论发电量计算": "计算发电机的理论发电量，包括发电效率，例如： xxxx/xx/xx ~ xxxx/xx/xx 时间 柴油发电机的理论发电量",
# "原始字段异常判断": "询问原始数据中的数据是否存在异常，例如： xxxx/xx/xx 上午 A架摆动数据是否异常",
# "未知分类": "不属于上述分类"

import json
import re
from base_llm import llm_invoke
from loguru import logger

## 多种思维链的拆解方式
## -- 长链 子问题求解 不需要约束子子链 完成子链递归求解问题
## -- 中链路 确定求解问题边界，将think chain 约束在求解路径中
## -- 短链 大类分解 没一类问题 case by case， 单问题求解方便 复合问题求解困难
BASE_PROMPT = """
    你能根据谓词逻辑和问题的计算逻辑进行问题拆分，多问题聚合问题拆分成子问题,分步骤解决
    1、一个问题包含多个问题，多步操作进行拆分
    2、问题拆分最好不超过3个步骤
    字段说明： 
        "步骤"：表示当前子问题进行的步骤（注意步骤需要不要重复），
        "子问题"：列出当前要解决的子问题，如果数据需求仅依赖之前步骤的结果（如果还依赖其他数据信息则都为sql） 则 数据需求选项为 step和sql 不要设置其他值,
        "是否前序依赖": 如果当前步骤需要依赖之前步骤数据 则为 true  否则为 false
        
    问题说明，现在有几个种类的问题，不同种类的问题拆分逻辑不同：
    以下问题为不进行拆解的样例：
    案例：
    2024-01-01 上午A架摆回的时间点？
    ```jsonlines
    {"步骤":"1","子问题":"2024-01-01 上午A架摆回的时间点？","是否前序依赖":false,"数据需求":"sql"}
    ```
    
    案例：
    列出2024/01/01~01/02的A架开机的时间点
    /**某个时间段查询某个一个动作的所有列表 不拆 **/
    ```jsonlines
    {"步骤":"1","子问题":"列出2024/01/01~01/02的A架开机的时间点","是否前序依赖":false,"数据需求":"sql"}
    ```
    
    案例：
    统计2024/XX/XX-XX/XX AA设备在BB:00前进行CC的比例是多少？
    /** 多天连续时间段内，XX设备在某个时间之前 或者之后 进行某种动作的比例 这类问题不拆 **/
    ```jsonlines
    {"步骤":"1","子问题":"统计2024/XX/XX-XX/XX AA设备在BB:00前进行CC的比例是多少？","是否前序依赖":false,"数据需求":"sql"}
    ```
    其他种类问题：
    """

# 简单动作时间查询
CASE_1_PROMPT = """
问题类型名称：简单动作时间查询
问题类型描述： 1、包含一个时间点或者一个连续时间片段，例如: 2024-01-02 、2024-01-02 上午/下午、 2024-01-02 ~ 2024-01-03 或者 2024-01-02 00:00 ~ 2024-01-03 00:00 或者 2024-01-02 00:00 ~ 03:00 类型时间片段，时间段是连续的
            2、包含设备或者动作： 例如设备 A架、折臂吊车、小艇、征服者、DP （DP的开启和关闭为 ON DP 和 OFF DP） 例如动作 出水、摆回、解除、摆动、检查、挂妥、开机、关机
            3、提问方式包括 询问所有时间点、第一次发生的时间点、结束的时间点、最后一次时间 ...
问题类型案例：案例1：xxxx-xx-xx A架开机的时间点？ xxxx-xx-xx 第一次开机的时间点？ xxxx-xx-xx A架摆出的时间点？ xxxx-xx-xx A架摆动的时间点？
问题拆分的说明：不需要进行问题思维链拆解，直接返回结果
案例：
2024-01-01 上午A架第一次摆出的时间点？
```jsonlines
{"步骤":"1","子问题":"2024-01-01 上午A架第一次摆出的时间点？","是否前序依赖":false,"数据需求":"sql"}
```

2024-01-01 上午A架摆出和摆回的时间点？
```jsonlines
{"步骤":"1","子问题":"2024-01-01 上午A架摆出和摆回的时间点？","是否前序依赖":false,"数据需求":"sql"}
```
"""

# 简单动作盘点
CASE_2_PROMPT = """
原子问题类型名称：简单动作盘点
问题类型描述： 1、包含一个时间点或者一个连续时间片段，例如: 2024-01-02 、2024-01-02 上午/下午、 2024-01-02 ~ 2024-01-03 或者 2024-01-02 00:00 ~ 2024-01-03 00:00 或者 2024-01-02 00:00 ~ 03:00 类型时间片段，时间段是连续的
               2、询问这个时间点或者这个时间段内发生了什么动作
问题类型案例：案例1：xxxx-xx-xx 什么动作发生， xxxx-xx-xx 10:00 ~ 12:00 发生了什么关键动作， xxxx-xx-xx 10:00 ~ 12:00 折臂吊车是否已经开机， xxxx-xx-xx 什么动作同时发生
问题拆分的说明：不需要进行问题思维链拆解，直接返回结果
案例：
2024-01-01 什么动作发生
```jsonlines
{"步骤":"1","子问题":"2024-01-01 什么动作发生","是否前序依赖":false,"数据需求":"sql"}
```
"""

CASE_3_PROMPT ="""
原子问题类型名称：带时间过滤的动作时间查询（注意是一个连续时间，没有多天汇总统计情况）
问题类型描述： 1、包含一个时间点或者一个连续时间片段，例如: 2024-01-02 、2024-01-02 上午/下午、 2024-01-02 ~ 2024-01-03 或者 2024-01-02 00:00 ~ 2024-01-03 00:00 或者 2024-01-02 00:00 ~ 03:00 类型时间片段，时间段是连续的
            2、包含设备或者动作： 例如设备 A架、折臂吊车、小艇、征服者、DP （DP的开启和关闭为 ON DP 和 OFF DP） 例如动作 出水、摆回、解除、摆动、检查、挂妥、开机、关机
            3、提问方式包括： 根据某个时间点进行筛选和动作查询回答
问题类型案例：案例1：xxxx-xx-xx 9点之后，A架开机的时间点？ xxxx-xx-xx 10点之前，xx摆出时间？ xxxx-xx-xx ~ xxxx-xx-xx 9点前折臂吊车开机的时间？
问题拆分的说明：不需要进行问题思维链拆解，直接按格式返回结果
案例：
2024-01-01 15:00 后A架摆出的时间？
```jsonlines
{"步骤":"1","子问题":"2024-01-01 15:00 后A架摆出的时间？","是否前序依赖":false,"数据需求":"sql"}
```

xxxx-xx-xx ~ xxxx-xx-xx 7点前折臂吊车开机的时间？
```jsonlines
{"步骤":"1","子问题":"xxxx-xx-xx ~ xxxx-xx-xx 7点前折臂吊车开机的时间？","是否前序依赖":false,"数据需求":"sql"}
```
"""

CASE_4_PROMPT = """
问题类型名称：动作过滤动作时间查询
问题类型描述： 1、包含一个时间点或者一个连续时间片段，例如: 2024-01-02 、2024-01-02 上午/下午、 2024-01-02 ~ 2024-01-03 或者 2024-01-02 00:00 ~ 2024-01-03 00:00 或者 2024-01-02 00:00 ~ 03:00 类型时间片段，时间段是连续的
                   2、包含设备或者动作： 例如设备 A架、折臂吊车、小艇、征服者、DP （DP的开启和关闭为 ON DP 和 OFF DP） 例如动作 出水、摆回、解除、摆动、检查、挂妥、开机、关机
                   3、提问方式包括： 根据某个动作再进行查询判断动作的时间点
问题类型案例：案例1：xxxx-xx-xx DP开启后，折臂吊车什么时候开机？ xxxx-xx-xx A架摆回前，小艇是否入水？ xxxx-xx-xx ~ xxxx-xx-xx A架摆出后小艇入水的时间？
问题拆分的说明：该类问题拆分成两级
案例：
2024-01-01 15:00后 A架关机是否早于小艇落座？
```jsonlines
{"步骤":"1","子问题":"2024-01-01 15:00后 A架关机和小艇落座时间点？","是否前序依赖":false,"数据需求":"sql"}
{"步骤":"2","子问题":"根据步骤1给出的时间，判断A架关机是否早于小艇落座","是否前序依赖":true,"数据需求":"step"}
```

2024-01-01 15:00后 A架关机后多久小艇落座？
```jsonlines
{"步骤":"1","子问题":"2024-01-01 15:00后 A架关机和小艇落座时间点？","是否前序依赖":false,"数据需求":"sql"}
{"步骤":"2","子问题":"根据步骤1给出的时间，计算A架关机和小艇落座的时间间隔","是否前序依赖":true,"数据需求":"step"}
```

2024/1/1 08:00 ~ 08:30之间，在A架开机之后，发生了什么关键动作？
/**这类某个动作之后发生了动作，处理逻辑：只需要获取到这块时间的所有动作，再进行判断筛选
**/
```jsonlines
{"步骤":"1","子问题":"2024/1/1 08:00 ~ 08:30之间，发生了什么动作 ","是否前序依赖":false,"数据需求":"sql"}
{"步骤":"2","子问题":"根据步骤1给出的动作，2024/1/1 08:00 ~ 08:30之间，在A架开机之后，发生了什么关键动作？","是否前序依赖":true,"数据需求":"step"}
```
"""

CASE_5_PROMPT =    """
问题类型名称：时间段动作聚合计算
问题类型描述： 1、包含一个连续时间片段，例如: 2024-01-02 、2024-01-02 上午/下午、 2024-01-02 ~ 2024-01-03 或者 2024-01-02 00:00 ~ 2024-01-03 00:00 或者 2024-01-02 00:00 ~ 03:00 类型时间片段，时间段是连续的
            2、包含设备或者动作： 例如设备 A架、折臂吊车、小艇、征服者、DP （DP的开启和关闭为 ON DP 和 OFF DP） 例如动作 出水、摆回、解除、摆动、检查、挂妥、开机、关机
            3、提问方式包括： xxxx-xx-xx ~ xxxx-xx-xx A架早于9点的开机次数， xxxx-xx-xx 00:00 ~ xxxx-xx-xx 12:00 作业于9点开始的比例
            4、聚合操作包括： 次数、频次、占比比例、最大、最小、最长、最短、最多、最少，平均，总计
问题类型案例：案例1：xxxx-xx-xx ~ xxxx-xx-xx 小艇入水晚于下午3点的次数， xxxx-xx-xx ~ xxxx-xx-xx A架开机时长超过1小时的占比
问题拆分的说明：该类问题拆分成两级 （注意：步骤1中给出动作发生时间点是多个，步骤2还需要根据步骤1的时间点结果再去数据库中筛选，所以数据需求都为sql）
案例：
2024-01-01 ~ 2024-01-03 A架开机时长超过1小时的占比
```jsonlines
{"步骤":"1","子问题":"计算2024-01-01 ~ 2024-01-03 A架开机每天的开机时长","是否前序依赖":false,"数据需求":"sql"}
{"步骤":"2","子问题":"根据步骤1给出的时长，计算时长大1小时的比例","是否前序依赖":true,"数据需求":"step"}
```

"""

DEEP_SEA_EXTEND_PROMPT = """
    问题类型名称：离散深海作业A问题
    问题类型描述： 1、包含的时间段是离散的，多个时间段，例如 xxxx-xx-xx和yyyy-yy-yy 或者是 xxxx-xx-xx、yyyy-yy-yy、zzzz-zz-zz
                   2、包含设备或者动作：询问作业（深海作业）时长和时间点相关问题
                   3、提问方式包括： xxxx-xx-xx、xxxx-xx-xx 平均作业时间\
                   4、聚合操作包括： 次数、频次、占比比例、最大、最小、最长、最短、最多、最少，平均，总计
    问题类型案例：案例1：xxxx-xx-xx、xxxx-xx-xx和xxxx-xx-xx A架平均开机时长
    问题拆分的说明：
        如果没有特殊说明：深海作业A作业开始的时间 以 ON DP 开始 以 A架关机结束 （下放阶段 ON DP 开始 OFF DP结束，回收阶段 A架开机开始 A架关机结束 ）
        深海作业A 一天的时长计算方式为： （下放时长+回收时长）
        计算多天数据则需要先计算每天的下放和回收时长总和
        最终计算多天全部时长的平均值得到结果
    案例：
    2024-01-01、2024-01-03 作业A平均时长
    ```jsonlines
    {"步骤": "1", "子问题": "2024-01-01 深海作业A下放阶段开始时间点（ON DP）结束时间点（OFF DP）,下放阶段时长多久？", "依赖前序数据": False, "数据需求": "sql"},
    {"步骤": "2", "子问题": "2024-01-01 深海作业A回收阶段开始时间点（A架开机）结束时间点（A架关机）,回收阶段时长多久？", "依赖前序数据": False, "数据需求": "sql"},
    {"步骤": "3", "子问题": "2024-01-02 深海作业A下放阶段开始时间点（ON DP）结束时间点（OFF DP）,下放阶段时长多久？", "依赖前序数据": False, "数据需求": "sql"},
    {"步骤": "4", "子问题": "2024-01-02 深海作业A回收阶段开始时间点（A架开机）结束时间点（A架关机）,回收阶段时长多久？", "依赖前序数据": False, "数据需求": "sql"},
    {"步骤": "5", "子问题": "根据步骤1、2 计算 2024-01-01 深海作业A作业时长是多少", "依赖前序数据": false, "数据需求": "step"}
    {"步骤": "6", "子问题": "根据步骤3、4 计算 2024-01-02 深海作业A作业时长是多少", "依赖前序数据": false, "数据需求": "step"}
    {"步骤": "7", "子问题": "根据步骤5、6 计算 2024-01-01、2024-01-02 深海作业A平均作业时长", "依赖前序数据": false, "数据需求": "step"}
    ```

    案例：
    2024-01-01作业时长
    ```jsonlines
    {"步骤": "1", "子问题": "2024-01-01 深海作业A下放阶段开始时间点（ON DP）结束时间点（OFF DP）,下放阶段时长多久？", "依赖前序数据": false, "数据需求": "sql"},
    {"步骤": "2", "子问题": "2024-01-01 深海作业A回收阶段开始时间点（A架开机）结束时间点（A架关机）,回收阶段时长多久？", "依赖前序数据": false, "数据需求": "sql"},
    {"步骤": "3", "子问题": "根据步骤1、2 计算 2024-01-01 深海作业A作业时长是多少", "依赖前序数据": false, "数据需求": "step"}
    ```
    
    案例：
    2021-01-01 以A架开机为标志，深海作业A开始时间？
    ```jsonlines
    {"步骤": "1", "子问题": "2024-01-01 深海作业A下放阶段开始时间点（以A架开机为标志）", "依赖前序数据": false, "数据需求": "sql"}
    ```
"""

CASE_DISCRETE_TIME_PROMPT = """
问题类型名称：离散时间段动作聚合计算
问题类型描述： 1、包含的时间段是离散的，多个时间段，例如 xxxx-xx-xx和yyyy-yy-yy 这种 或者是 xxxx-xx-xx 早上和下午，即XX日上午和XX日下午 XX指标比较
                   2、包含设备或者动作： 例如设备 A架、折臂吊车、小艇、征服者、DP （DP的开启和关闭为 ON DP 和 OFF DP） 例如动作 出水、摆回、解除、摆动、检查、挂妥、开机、关机
                   3、提问方式包括： xxxx-xx-xx、xxxx-xx-xx 哪天A架开机早？早多久？ ， xxxx-xx-xx、xxxx-xx-xx 平均作业时间
                   4、聚合操作包括： 次数、频次、占比比例、最大、最小、最长、最短、最多、最少，平均，总计
问题类型案例：案例1：xxxx-xx-xx、xxxx-xx-xx和xxxx-xx-xx A架平均开机时长
问题拆分的说明：该类问题拆分成两级 （注意：步骤1中给出动作发生时间点是多个，步骤2还需要根据步骤1的时间点结果再去数据库中筛选，所以数据需求都为sql）
案例：
2024-01-01、2024-01-03 A架平均开机时长
```jsonlines
{"步骤":"1","子问题":"2024-01-01 A架每一天的开机总时长","是否前序依赖":false,"数据需求":"sql"}
{"步骤":"2","子问题":"2024-01-03 A架每一天的开机总时长","是否前序依赖":false,"数据需求":"sql"}
{"步骤":"3","子问题":"根据步骤1、2给出的时长，计算两天的平均时长","是否前序依赖":true,"数据需求":"step"}
```

2024-01-01~2024-01-02 上午A架平均开机时长
/**
注意 AA时间 ~（、） BB时间 上午 XXX情况 表述等同于 AA时间上午 BB时间上午 （动作需要单独按照天进行统计算，所以为离散计算逻辑）
即：2024/8/AA 和 2024/8/BB 上午A架运行的平均时间多少】 理解为 【(2024/8/AA上午A架运行时间 + 2024/8/BB上午A架运行时间)/2
**/
```jsonlines
{"步骤":"1","子问题":"2024-01-01 上午A架开机总时长","是否前序依赖":false,"数据需求":"sql"}
{"步骤":"2","子问题":"2024-01-02 上午A架开机总时长","是否前序依赖":false,"数据需求":"sql"}
{"步骤":"3","子问题":"根据步骤1、2给出的时长，计算两天上午的平均时长","是否前序依赖":true,"数据需求":"step"}
```
"""


CASE_CONTINUOUS_TIME_PROMPT = """
问题类型名称：连续时间段动作聚合计算
问题类型描述： 1、包含一个连续时间片段，例如: 2024-01-02 ~ 2024-01-05
            2、涉及设备动作的持续性指标统计（开机次数、运行频次、最长时段等）
            3、需要先获取完整时间序列数据再进行数学运算
            4、典型操作包括：计算总时长、频次统计、占比分析、极值比较、平均值
问题类型案例：
案例 1：2024-01-01 ~ 2024-01-03 征服者8点前出水的比例
问题拆解原则：
    先提取原始动作时间点序列
    基于原始数据执行聚合运算
    复杂指标分步计算（如占比需先求分子分母）
拆解案例：
案例 1：2024-01-01 ~ 2024-01-03 征服者8点前出水的比例
```jsonlines
{"步骤":"1","子问题":"2024-01-01 ~ 2024-01-03 征服者出水时间点","是否前序依赖":false,"数据需求":"sql"}
{"步骤":"2","子问题":"根据步骤1给出的时间点，计算征服者8点前出水的占比","是否前序依赖":true,"数据需求":"step"}
```
"""


EFFICIENCY_EXTEND_PROMPT = """
问题类型名称： 实际运行时长和运行效率问题
涉及设备： A架(门架)，折臂吊车
案例：
2024-01-01 A架实际运行时长时长，效率是多少
```jsonlines
{"步骤": "1", "子问题": "2024-01-01 A架实际运行时长", "依赖前序数据": false, "数据需求": "sql"},
{"步骤": "2", "子问题": "2024-01-01 A架开机时长", "依赖前序数据": false, "数据需求": "sql"},
{"步骤": "3", "子问题": "根据步骤1、2 回答 2024-01-01 A架实际运行时长时长和效率", "依赖前序数据": false, "数据需求": "step"}
```
"""


def build_prompt_chain(question):

    prompt_chain = BASE_PROMPT

    # 第一优先级：特殊作业场景
    if "作业" in question:
        prompt_chain += DEEP_SEA_EXTEND_PROMPT  # 需要补充深海作业专用提示

    # 第二优先级：复合型问题
    if any(kw in question for kw in ["间隔", "多久", "差","是否", "早于", "晚于","之前","之后"]):
        prompt_chain += CASE_4_PROMPT
        prompt_chain += CASE_5_PROMPT

    # 第三优先级：统计类问题
    stat_keywords = ["次数", "平均", "总计", "占比", "最长", "最短","频率","次","比例","百分比","相比"]
    if any(kw in question for kw in stat_keywords):
        prompt_chain += CASE_DISCRETE_TIME_PROMPT
        prompt_chain += CASE_CONTINUOUS_TIME_PROMPT

    # 第四优先级：基础查询类
    elif any(kw in question for kw in ["时间点", "时候", "何时","时间"]):
            prompt_chain += CASE_3_PROMPT
            prompt_chain += CASE_1_PROMPT

    # 第五优先级：动作盘点类
    elif any(kw in question for kw in ["什么动作", "发生", "关键动作","动作"]):
        prompt_chain += CASE_2_PROMPT

    # 特殊条件扩展
    if ("实际运行" in question) and ("A架" in question):
        prompt_chain += EFFICIENCY_EXTEND_PROMPT  # 需要补充效率计算专用提示

    return prompt_chain

def action_sub_chain(question):
    # 生成 动作类查询思维链，注意 时间点或者时间段，时间点是精确时间，时间段是连续的时间片段
    # 先整理不用拆解的情况
    logger.add("action_sub_chain.log")
    action_system_prompt = build_prompt_chain(question)
    user_prompt = f"""
    请按照上述的问题类型和问题描述，给出问题的拆解逻辑，注意拆解尽量谨慎，如无必要就不需要对问题进行拆解。
    注意事项：
    1、注意进行比较时候的主语，例如 比较 2024-01-01 和 2024-01-02 上午作业时间 实际是比较  2024-01-01上午和 2024-01-02上午 两个上午的作业时间
    2、注意当询问 设备开机时长问题，需要注意不要单独拆分开机时间和关机时间，例如询问 2024-01-01和2024-01-02早上折臂吊车开机时长是多久可以拆分成 2024-01-01早上折臂吊车开机总时长是多久？ 和  2024-01-02早上折臂吊车开机总时长是多久？ 不要单独将开机时间和关机时间拆成多个步骤
    3、当涉及到时长相关问题拆分是，拆分的子问题描述 是 20xx-xx-xx  XXX运行时间总共是多少， 而非 20xx-xx-xx XXX运行时间是多少。
    4、除非是最后回答情况，尽量避免生成判断式子问题，例如 XXXA架是否开机。
    5、如果不拆分则返回原问题的 jsonlines 结构，不要进行编造。
    6、最终步骤，尽量给出完整问题
    需要拆分问题如下：
    {question}
    """
    messages = [
        {"role": "system", "content": action_system_prompt},
        {"role": "user", "content": user_prompt}
    ]
    response = llm_invoke(messages)

    def extract(content):
        match = re.search(r'```jsonlines\n(.*?)\n```', content, re.DOTALL)
        if match:
            result = []
            str_data = match.group(1)
            data_find_all = re.findall(r'{.*?}', str_data, re.DOTALL)
            for i in data_find_all:
                try:
                    row = json.loads(i)
                except:
                    return None
                result.append(row)
            return result
        return None

    ez_steps = extract(response)
    text_log = f"""
    ============================================================
    ============================================================
    question:{question}
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    {json.dumps(ez_steps,ensure_ascii=False,indent=4)}
    ============================================================
    """
    logger.info(text_log)

    return ez_steps





if __name__ == '__main__':

    print(action_sub_chain("在2024年8月24日，A架摆回和摆出的时间相隔多久（以整数分钟输出）？在这段时间内，4台柴油发电机的总发电量为多少？（kWh，保留两位小数）。"))
    # question_array = json.load(open("question_classify_step.json", "r", encoding="utf-8"))
    # for item in question_array["时长处理问题"]:
    #     action_sub_chain(item["question"])